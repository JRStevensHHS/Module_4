library("knitr")
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
basic <- as_tibble(basic)
genold <- as_tibble(genold)
glimpse(basic)
glimpse(genold)
oo8 <- basic[congress == 108,]
oo8 <- basic[basic$congress == 108,]
glimpse(oo8)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
IO8 <- basic[basic$congress == 108,]
glimpse(IO8)
glimpse(genold)
genold <- genold[order(genold$name)]
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
glimpse(genold)
glimpse(IO8$name)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# merge the two
genold <- genold[,-c("name")]
comb <- add_column(genold, IO8)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# merge the two
genold <- subset(genold, select = -c("name"))
comb <- add_column(genold, IO8)
# merge the two
genold <- subset(genold, select = -c(name))
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# merge the two
genold <- subset(genold, select = -c(name))
comb <- add_column(genold, IO8)
glimpse(comb)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# merge the two
genold <- subset(genold, select = -c(name))
comb <- bind_cols(genold, IO8)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# merge the two
genold <- subset(genold, select = -c(name))
comb <- bind_cols(genold, IO8)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# merge the two
genold <- subset(genold, select = -c(name))
comb <- bind_cols(genold, IO8)
glimpse(comb)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# drop identical columns and merge the two
genold <- subset(genold, select = -c(name, statenam, district))
comb <- bind_cols(genold, IO8)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "svrlng", "white", "region", "totchi", "rgroup")]
glimpse(genold)
glimose(comb)
glimpse(comb)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "srvlng", "white", "region", "totchi", "rgroup")]
# gender -> factor, missing -> NA
glimpse(comb)
comb$genold <- substr(comb$genold, "", NA)
glimpse(genold)
comb$genold[comb$genold == ""] <- NA
glimpse(genold)
comb$genold[comb$genold == ""] <- NA
glimpse(genold)
comb$genold[comb$genold == ''] <- NA
glimpse(genold)
glimpse(comb)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# drop identical columns and merge the two
genold <- subset(genold, select = -c(name, statenam, district))
comb <- bind_cols(genold, IO8)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "srvlng", "white", "region", "totchi", "rgroup")]
# gender -> factor, missing -> NA
comb$genold[comb$genold == ''] <- NA
glimpse(comb)
comb$genold <- as.factor(comb$genold)
glimpse(comb)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# tibble and glimpse
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# drop identical columns and merge the two
genold <- subset(genold, select = -c(name, statenam, district))
comb <- bind_cols(genold, IO8)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "srvlng", "white", "region", "totchi", "rgroup")]
# gender -> factor, missing -> NA
comb$genold <- as.factor(comb$genold)
glimpse(comb)
comb$genold[comb$genold == ''] <- NA
glimpse(comb)
comb$party <- as.character(comb$party) %>% substr("1", "D")
%>% substr("2", "R") %>% substr("3", "I")
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# convert to tibble
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# drop identical columns and merge the two
genold <- subset(genold, select = -c(name, statenam, district))
comb <- bind_cols(genold, IO8)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "srvlng", "white", "region", "totchi", "rgroup")]
# gender -> factor, missing -> NA
comb$genold <- as.factor(comb$genold)
comb$genold[comb$genold == ''] <- NA
# party -> factor
comb$party <- as.character(comb$party) %>% substr("1", "D")
comb$party <- substr(comb$party, "2", "R") %>% substr("3", "I")
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# convert to tibble
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# drop identical columns and merge the two
genold <- subset(genold, select = -c(name, statenam, district))
comb <- bind_cols(genold, IO8)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "srvlng", "white", "region", "totchi", "rgroup")]
# gender -> factor, missing -> NA
comb$genold <- as.factor(comb$genold)
comb$genold[comb$genold == ''] <- NA
# party -> factor
comb$party <- as.character(comb$party)
glimpse(comb)
comb$party <- substr(comb$party, "2", "R") %>% substr("3", "I") %>% substr("1", "D")
glimpse(comb)
# setup
rm(list=ls())
library(rio)
library(tidyverse)
# import data
basic <- import("basic.dta")
genold <- import("genold108.dta")
# convert to tibble
basic <- as_tibble(basic)
genold <- as_tibble(genold)
# take subset, order alphabetcally by congressman
IO8 <- basic[basic$congress == 108,]
genold <- genold[order(genold$name),]
# drop identical columns and merge the two
genold <- subset(genold, select = -c(name, statenam, district))
comb <- bind_cols(genold, IO8)
# keep only relevant variables
comb <- comb[, c("name", "genold", "party", "ngirls", "nboys", "female",
"age", "srvlng", "white", "region", "totchi", "rgroup")]
# gender -> factor, missing -> NA
comb$genold <- as.factor(comb$genold)
comb$genold[comb$genold == ''] <- NA
# party -> factor
comb$party <- as.character(comb$party)
glimpse(comb)
